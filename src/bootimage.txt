emptystack emptystack \ call/cc push emptystack \ continue push \ concat push \ rot push \ top push \ swap push \ pop push \ dup push \ swap push push push \ call push emptystack \ call push \ choose push push \ if push emptystack \ call/cc push emptystack \ continue push \ scan4] push push \ { push \ \ push push \ { push emptystack \ call/cc push emptystack \ continue push \ scan4] push push \ [ push \ \ push push \ [ push emptystack \ if push emptystack push push \ when push emptystack \ call/cc push emptystack \ continue push \ def+ push \ destruct-definition push \ scan4; push \ swap push emptystack push push push \ : push emptystack push \ read-mapping push emptystack \ call push \ get push emptystack \ drop push push emptystack emptystack \ drop push \ swap push push \ f push mapping push \ rot push push \ choose push emptystack \ case push emptystack emptystack \ look4) push \ swap push \ cons push \ rot push \ unpush push \ drop push push \ \ push emptystack \ look4) push \ swap push \ cons push \ rot push push \ :else push emptystack \ swap push \ reverse push \ swap push \ drop push push \ ) push emptystack \ _|_ push emptystack \ effect push \ stack push \ incomplete push push \ syntax-error push \ \ push push emptystack top push mapping push \ dup push \ unpush push push \ look4) push emptystack \ -rot push \ dup push \ swap push push \ over push emptystack \ top push \ swap push \ pop push \ dup push push \ unpush push emptystack \ push push \ swap push push \ cons push emptystack \ call push \ get push \ get push emptystack push \ over push \ :else push push \ case push emptystack \ parse-quot push \ when push emptystack \ look4) push \ pop push push \ equal? push \ ( push \ \ push \ top push \ dup push \ swap push emptystack push \ uncons push push \ destruct-definition push emptystack \ rot push \ rot push push \ -rot push emptystack \ pop push \ swap push \ top push \ dup push push \ uncons push emptystack \ call/cc push emptystack \ continue push \ scan4] push push \ ( push \ \ push push \ ( push emptystack \ case push emptystack emptystack \ scan4[ push \ rot push emptystack push \ drop push push \ } push emptystack \ scan4[ push \ rot push emptystack push \ drop push push \ ] push emptystack \ scan4] push \ swap push \ push push \ \ push \ \ push \ cons push \ rot push \ unpush push \ drop push push \ \ push emptystack \ scan4] push \ scan4] push \ swap push \ cons push \ rot push push \ { push emptystack \ scan4] push \ scan4] push \ swap push \ cons push \ rot push push \ [ push emptystack \ scan4] push \ swap push \ cons push \ rot push push \ :else push emptystack \ scan4[ push \ rot push emptystack push \ drop push push \ ) push emptystack \ scan4] push \ scan4] push \ swap push \ cons push \ rot push push \ ( push emptystack \ _|_ push emptystack \ brackets push \ unbalanced push push \ syntax-error push \ \ push push emptystack top push mapping push \ dup push \ unpush push push \ scan4] push emptystack \ def push \ drop push \ swap push push \ def+ push emptystack \ set-dict push \ assoc push \ get-dict push \ swap push push \ def push emptystack \ reverse push \ apply push \ swap push emptystack push \ func push \ get-dict push push \ fcall push emptystack \ case push emptystack emptystack \ scan4[ push \ swap push \ push push \ \ push \ \ push \ cons push \ rot push \ unpush push \ drop push push \ \ push emptystack \ swap push \ push push \ mapping push \ fcall push \ swap push \ drop push push \ { push emptystack \ swap push \ push push \ swap push \ drop push push \ [ push emptystack \ scan4[ push \ swap push \ cons push \ rot push push \ :else push emptystack \ swap push \ push push \ fcall push \ swap push \ drop push push \ ( push emptystack \ _|_ push emptystack \ brackets push \ unbalanced push push \ syntax-error push \ \ push push emptystack top push mapping push \ dup push \ unpush push push \ scan4[ push emptystack \ case push emptystack emptystack \ scan4; push \ swap push \ cons push \ push push \ \ push \ \ push \ rot push \ unpush push \ drop push push \ \ push emptystack \ reverse push \ swap push \ drop push push \ ; push emptystack \ scan4; push \ swap push \ cons push \ rot push push \ :else push emptystack \ _|_ push emptystack \ definition push \ incomplete push push \ syntax-error push \ \ push push emptystack top push mapping push \ dup push \ unpush push push \ scan4; push emptystack \ call push \ reverse push \ push push \ ] push \ \ push \ reverse push \ push push \ [ push \ \ push push \ parse-quot push emptystack \ call/cc push emptystack \ continue push \ concat push \ swap push \ push push \ : push \ \ push \ cons push \ push push \ \ push \ \ push \ cons push emptystack \ ; push push \ dup push \ unpush push push push \ SYMBOL: push emptystack push \ read-word push mapping get-dict merge set-dict